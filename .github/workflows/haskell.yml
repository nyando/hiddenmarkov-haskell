name: Haskell CI

on:
  push:
    tags:
      - "*"

jobs:
  build_artifact:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }} / ${{ github.ref }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        cabal: ["3.6.2.0"]
        ghc:
          - "8.10.7"
          - "9.0.2"
          - "9.2.1"
        exclude:
          - os: macOS-latest
            ghc: 9.0.2
          - os: macOS-latest
            ghc: 8.10.7

          - os: windows-latest
            ghc: 9.0.2
          - os: windows-latest
            ghc: 8.10.7

    steps:
    - uses: actions/checkout@v2
    
    - uses: haskell/actions/setup@v1.2
      id: setup-haskell-cabal
      name: setup haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: configure
      run: |
        cabal configure --enable-tests --enable-benchmarks --enable-documentation --test-show-details=direct --write-ghc-environment-files=always

    - name: freeze
      run: |
        cabal freeze
    
    - name: test
      run: |
        cabal test

    - uses: actions/cache@v2
      name: Cache ~/.cabal/store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: build binary
      run: |
        mkdir dist
        cabal install --install-method=copy --overwrite-policy=always --installdir=dist
    
    - name: set binary path
      run: echo "BINARY_PATH=./dist/hiddenmarkov-haskell-exe" >> $GITHUB_ENV
    
    - if: matrix.os == 'windows-latest'
      name: set exe extension for windows release
      run: echo "BINARY_PATH=./dist/hiddenmarkov-haskell-exe.exe" >> $env:GITHUB_ENV
    
    - name: compress binary
      uses: svenstaro/upx-action@2.0.1
      with:
        file: ${{ env.BINARY_PATH }}

    - uses: ncipollo/release-action@v1
      with:
        artifacts: "./dist/*"
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
